// Generated by CoffeeScript 1.7.1
(function() {
  define(['components/MeshRenderer', 'lib/Vector3', 'lib/Trigonometry'], function(MeshRenderer, Vector3, Trigonometry) {
    var Collada;
    return Collada = (function() {
      function Collada() {}

      Collada.GetFile = function(type, url, cb) {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
          if (this.readyState === 4 && this.status === 200) {
            return cb(this.response);
          }
        };
        xhr.open('GET', url);
        xhr.responseType = type;
        return xhr.send();
      };

      Collada.LoadModel = function(file, done_cb, each_cb) {
        return this.GetFile('application/json', file, (function(_this) {
          return function(response) {
            var a, data, fillStyle, i, indices, name, nil, obj, transforms, vcount, vertices, _i, _j, _len, _len1, _ref;
            _ref = JSON.parse(response);
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              data = _ref[_i];
              name = data.name, vertices = data.vertices, vcount = data.vcount, indices = data.indices, fillStyle = data.fillStyle, transforms = data.transforms;
              obj = {};
              obj.renderer = new MeshRenderer({
                object: obj
              });
              obj.renderer.mesh_name = name;
              obj.renderer.materials = [
                {
                  fillStyle: fillStyle
                }
              ];
              obj.renderer.vcount = vcount;
              obj.renderer.indices = indices;
              a = Trigonometry.Degrees2Radians(180);
              for (i = _j = 0, _len1 = vertices.length; _j < _len1; i = _j += 3) {
                nil = vertices[i];
                obj.renderer.vertices.push(Vector3.FromArray(vertices, i).TransformMatrix4(transforms[0]).TransformMatrix4([1, 0, 0, 0, 0, Math.cos(a), -1 * Math.sin(a), 0, 0, Math.sin(a), Math.cos(a), 0, 0, 0, 0, 1]).TransformMatrix4([35, 0, 0, 0, 0, 35, 0, 0, 0, 0, 35, 0, 0, 0, 0, 1]).TransformMatrix4([1, 0, 0, 180, 0, 1, 0, 370, 0, 0, 1, 0, 0, 0, 0, 1]));
              }
              each_cb(obj);
            }
            return done_cb();
          };
        })(this));
      };

      return Collada;

    })();
  });

}).call(this);
