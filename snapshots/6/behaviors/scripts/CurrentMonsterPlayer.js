// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['components/Script', 'lib/Input'], function(Script, Input) {
    var CurrentMonsterPlayer;
    return CurrentMonsterPlayer = (function(_super) {
      __extends(CurrentMonsterPlayer, _super);

      function CurrentMonsterPlayer() {
        return CurrentMonsterPlayer.__super__.constructor.apply(this, arguments);
      }

      CurrentMonsterPlayer.prototype.OnControllerColliderHit = function(engine, collidingObject) {
        if (this.object.constructor.name === 'Monster' && collidingObject.constructor.name === 'Player') {
          if (this.object.visible && Input.GetButtonDown('Fire')) {
            console.log('hit');
            alert('You grabbed the hider! You WIN!');
            return location.reload();
          }
        }
      };

      CurrentMonsterPlayer.prototype.Update = function(engine) {
        if (Input.GetButtonDown('Use')) {
          console.log('toggle visibility');
          this.object.ToggleVisibility();
        }
        if (Input.GetButtonDown('Fire')) {
          console.log('attack. miss?');
        }
        if (Input.GetButtonDown('Alt Fire')) {
          return console.log('alt attack');
        }
      };

      CurrentMonsterPlayer.prototype.DrawGUI = function(engine) {
        engine.Info('Controls: E - toggle visibility, LClick - capture', 50, 'red', 12);
        return engine.Info('Objective: Scare or capture the hider', 51, 'gray', 12);
      };

      return CurrentMonsterPlayer;

    })(Script);
  });

}).call(this);
